<h4>Commit: {{commitId}}</h4>
<h2 class="editable" data-name="title" data-title="Page Title" data-type="text" data-pk="{{commitId}}" data-url="editpage">{{#if title}}{{title}}{{else}}Untitled{{/if}}</h2>
<p class="editable" data-name="comment" data-title="Page Comments" data-type="textarea" data-pk="{{commitId}}" data-url="editpage">{{#if comment}}{{comment}}{{else}}Add comments{{/if}}</p>
{{#each images}}
	<figure>
		<img src="{{src}}" />
		<figcaption class="editable" data-name="caption/{{src}}" data-title="Image Caption" data-type="text" data-pk="{{commitId}}" data-url="editpage">{{#if caption}}{{caption}}{{else}}Add caption{{/if}}</figcaption>
	</figure>
	<br />
{{/each}}
<form id="addImageForm" class="dropzone" action="addimage" method="post" enctype="multipart/form-data">
	<div class="fallback">Add Images: <input name="imageFile" type="file" /></div>
	<!-- <div class="fallback">Add Images: <input name="imageFile" type="file" multiple /></div> -->
	<input type="hidden" name="commitId" value="{{commitId}}" />
</form>
{{#if isHead}}
	<script type="text/javascript" src="/lib/live.js"></script>
{{/if}}
<script>
	$.fn.editable.defaults.mode = 'inline';

	Dropzone.autoDiscover = false;

	$(document).ready(function() {

		$('.editable').editable();
	
		let dropErrors = false; // did dropzone errors occur?
		$("#addImageForm").dropzone({
			dictDefaultMessage: "Drop images here to add to the page", 
			parallelUploads: 1,
			uploadMultiple: false,
			paramName: 'imageFile', 
			init: function() {
				this.on("addedfile", (file) => {
					console.log("Dropzone file added: " + file.name);
					if (window.liveJs) { window.liveJs.setPaused(true); }
				});
				this.on("error", (file, error) => {
					console.log("Dropzone error on " + file.name + ": " + error);
					dropErrors = true;
				});
				this.on("queuecomplete", () => { 
					console.log("Dropzone queue complete. Errors? " + dropErrors);
					if (!dropErrors) {
						location.reload(); 
						if (window.liveJs) { window.liveJs.setPaused(false); }
					}
				});
				this.on("reset", () => {
					console.log("Dropzone reset");
					dropErrors = false;
				});
			}
		});

	});
</script>

